{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useReducer, useEffect, useState } from 'react';\nimport { projectFirestore } from '../firebase/config';\nlet initialState = {\n  document: null,\n  isPending: false,\n  error: null,\n  success: null\n};\nconst firestoreReducer = (state, action) => {\n  switch (action.type) {\n    case \"IS_PENDING\":\n      return {\n        success: false,\n        isPending: true,\n        error: null,\n        document: null\n      };\n    case \"ERROR\":\n      return {\n        success: false,\n        isPending: false,\n        error: action.payload,\n        document: null\n      };\n    case \"ADDED_DOCUMENT\":\n      return {\n        success: true,\n        isPending: false,\n        error: null,\n        document: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport const useFireStore = collection => {\n  _s();\n  const [response, dispatch] = useReducer(firestoreReducer, {\n    initialState\n  });\n  const [isCancelled, setIsCancelled] = useState(false);\n\n  // collection ref, passing the collection which we want to\n  // connect to\n  const ref = projectFirestore.collection(collection);\n\n  // only dispatch is not cancelled\n  const dispatchIfNotCancelled = action => {\n    if (!isCancelled) dispatch(action);\n  };\n\n  // add a document\n  const addDocument = async doc => {\n    dispatch({\n      type: 'IS_PENDING'\n    });\n    try {\n      const addedDocument = await ref.add(doc);\n      dispatchIfNotCancelled({\n        type: 'ADDED_DOCUMENT',\n        payload: addedDocument\n      });\n    } catch (error) {}\n  };\n\n  // delete a document\n\n  const deleteDocument = async id => {};\n\n  // cleanup function\n\n  useEffect(() => {\n    return () => setIsCancelled(true);\n  }, []);\n  return {\n    addDocument,\n    deleteDocument,\n    response\n  };\n};\n_s(useFireStore, \"/HNrTJP+f/hS3kXzTFJQmF7gmj0=\");","map":{"version":3,"names":["useReducer","useEffect","useState","projectFirestore","initialState","document","isPending","error","success","firestoreReducer","state","action","type","payload","useFireStore","collection","response","dispatch","isCancelled","setIsCancelled","ref","dispatchIfNotCancelled","addDocument","doc","addedDocument","add","deleteDocument","id"],"sources":["/home/bahubali/Code/Projects/Net ninja react/finance-app/src/hooks/useFireStore.js"],"sourcesContent":["import {useReducer, useEffect, useState}  from 'react';\nimport {projectFirestore} from '../firebase/config';\n\nlet initialState = {\n    document:null,\n    isPending:false,\n    error:null,\n    success:null\n}\n\nconst firestoreReducer = (state, action) => {\n    switch (action.type) {\n      case \"IS_PENDING\":\n        return {success: false, isPending: true, error: null, document: null}\n      case \"ERROR\":\n        return {success: false, isPending: false, error: action.payload, document: null}\n      case \"ADDED_DOCUMENT\":\n        return {success: true, isPending: false, error: null, document: action.payload}\n      default:\n        return state\n    }\n  }\n\nexport const useFireStore = (collection)=>{\n\n    const [response,dispatch] = useReducer(firestoreReducer,{initialState})\n    const [isCancelled, setIsCancelled] = useState(false);\n\n    // collection ref, passing the collection which we want to\n    // connect to\n    const ref = projectFirestore.collection(collection);\n\n    // only dispatch is not cancelled\n    const dispatchIfNotCancelled = (action)=>{\n        if(!isCancelled)    dispatch(action);\n    }\n\n\n    // add a document\n    const addDocument = async (doc)=>{\n        dispatch({type:'IS_PENDING'})\n\n        try {\n            const addedDocument = await ref.add(doc);\n            dispatchIfNotCancelled({type:'ADDED_DOCUMENT',payload:addedDocument})\n            \n        } catch (error) {\n\n        }\n\n    }\n\n    // delete a document\n\n    const deleteDocument =async  (id)=>{\n\n    }\n\n    // cleanup function\n\n    useEffect(()=>{\n        return ()=>setIsCancelled(true);\n    },[])\n\n    return {addDocument, deleteDocument,response}\n}\n"],"mappings":";AAAA,SAAQA,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACtD,SAAQC,gBAAgB,QAAO,oBAAoB;AAEnD,IAAIC,YAAY,GAAG;EACfC,QAAQ,EAAC,IAAI;EACbC,SAAS,EAAC,KAAK;EACfC,KAAK,EAAC,IAAI;EACVC,OAAO,EAAC;AACZ,CAAC;AAED,MAAMC,gBAAgB,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;EACxC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,YAAY;MACf,OAAO;QAACJ,OAAO,EAAE,KAAK;QAAEF,SAAS,EAAE,IAAI;QAAEC,KAAK,EAAE,IAAI;QAAEF,QAAQ,EAAE;MAAI,CAAC;IACvE,KAAK,OAAO;MACV,OAAO;QAACG,OAAO,EAAE,KAAK;QAAEF,SAAS,EAAE,KAAK;QAAEC,KAAK,EAAEI,MAAM,CAACE,OAAO;QAAER,QAAQ,EAAE;MAAI,CAAC;IAClF,KAAK,gBAAgB;MACnB,OAAO;QAACG,OAAO,EAAE,IAAI;QAAEF,SAAS,EAAE,KAAK;QAAEC,KAAK,EAAE,IAAI;QAAEF,QAAQ,EAAEM,MAAM,CAACE;MAAO,CAAC;IACjF;MACE,OAAOH,KAAK;EAAA;AAElB,CAAC;AAEH,OAAO,MAAMI,YAAY,GAAIC,UAAU,IAAG;EAAA;EAEtC,MAAM,CAACC,QAAQ,EAACC,QAAQ,CAAC,GAAGjB,UAAU,CAACS,gBAAgB,EAAC;IAACL;EAAY,CAAC,CAAC;EACvE,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;;EAErD;EACA;EACA,MAAMkB,GAAG,GAAGjB,gBAAgB,CAACY,UAAU,CAACA,UAAU,CAAC;;EAEnD;EACA,MAAMM,sBAAsB,GAAIV,MAAM,IAAG;IACrC,IAAG,CAACO,WAAW,EAAKD,QAAQ,CAACN,MAAM,CAAC;EACxC,CAAC;;EAGD;EACA,MAAMW,WAAW,GAAG,MAAOC,GAAG,IAAG;IAC7BN,QAAQ,CAAC;MAACL,IAAI,EAAC;IAAY,CAAC,CAAC;IAE7B,IAAI;MACA,MAAMY,aAAa,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAACF,GAAG,CAAC;MACxCF,sBAAsB,CAAC;QAACT,IAAI,EAAC,gBAAgB;QAACC,OAAO,EAACW;MAAa,CAAC,CAAC;IAEzE,CAAC,CAAC,OAAOjB,KAAK,EAAE,CAEhB;EAEJ,CAAC;;EAED;;EAEA,MAAMmB,cAAc,GAAE,MAAQC,EAAE,IAAG,CAEnC,CAAC;;EAED;;EAEA1B,SAAS,CAAC,MAAI;IACV,OAAO,MAAIkB,cAAc,CAAC,IAAI,CAAC;EACnC,CAAC,EAAC,EAAE,CAAC;EAEL,OAAO;IAACG,WAAW;IAAEI,cAAc;IAACV;EAAQ,CAAC;AACjD,CAAC;AAAA,GA1CYF,YAAY"},"metadata":{},"sourceType":"module"}